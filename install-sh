#!/bin/bash

test_cmd() {
    "$@"
    local status=$?

    if [ $status -ne 0 ] 
    then err "are you using the gnu version?"
    else msg "test $@ OK"
    fi
}


msg() {
    echo "install-sh: $1"
}

step_msg() {
    msg
    msg "$1"
    msg
}

warn() {
    echo "install-sh: WARNING: $1"
}

err() {
    echo "install-sh: error: $1"
    exit 1
}

need_cmd() {
    if command -v $1 >/dev/null 2>&1
    then msg "found $1"
    else err "need $1"
    fi
}


probe() {
    local V=$1
    shift
    local P
    local T

    for P
    do
        T=$(command -v $P 2>&1)
        if [ $? -eq 0 ]
        then
            VER0=$($P --version 2>/dev/null | head -1 \
                |  sed -e 's/[^0-9]*\([vV]\?[0-9.]\+[^ ]*\).*/\1/' )
            if [ $? -eq 0 -a "x${VER0}" != "x" ]
            then
              VER="($VER0)"
            else
              VER=""
            fi
            break
        else
            VER=""
            T=""
        fi
    done

    eval $V=\$T
}

probe_need() {
    local V=$1
    probe $*
    eval VV=\$$V

    if [ -z "$VV" ] 
    then
        err "needed, but unable to find any of: $*"
    fi
}


msg "looking for required commands"
need_cmd mkdir
need_cmd printf

step_msg "looking for needed program"

probe_need CFG_GIT git
probe_need CFG_WGET wget
probe_need CFG_UNZIP unzip
probe_need CFG_MAKE make
probe_need CFG_CTAGS ctags

msg "testing ctags is gnu"
test_cmd ctags -R

mkdir -p tools bin/ obj/


$CFG_WGET http://nchc.dl.sourceforge.net/project/rapidxml/rapidxml/rapidxml%201.13/rapidxml-1.13.zip -P tools/
cd tools/ && unzip rapidxml-1.13.zip && cd -

if [ "$1" == "--zip-only" ]; then
  $CFG_WGET https://codeload.github.com/botonchou/utility/zip/master -O tools/utility.zip
  $CFG_UNZIP tools/utility.zip -d tools/ && mv tools/utility-master tools/utility

  $CFG_WGET https://codeload.github.com/botonchou/libcumatrix/zip/master -O tools/libcumatrix.zip
  $CFG_UNZIP tools/libcumatrix.zip -d tools/ && mv tools/libcumatrix-master tools/libcumatrix 
else
  printf "\33[34m[Info]\33[0m You can specify \33[33m--zip-only\33[0m if git clone is too slow\n"
  $CFG_GIT clone https://github.com/botonchou/utility.git tools/utility
  $CFG_GIT clone https://github.com/botonchou/libcumatrix.git tools/libcumatrix
fi

# Make dependencies first
cd tools/utility && $CFG_MAKE o3 && cd -
cd tools/libcumatrix && $CFG_MAKE o3 && cd -

# Make !!
$CFG_MAKE o3
